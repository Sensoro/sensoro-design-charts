"use strict";(self.webpackChunksensoro_design_charts=self.webpackChunksensoro_design_charts||[]).push([["797"],{41018:function(n,e,t){t.r(e),t.d(e,{default:()=>u});var a=t(52676),l=t(40453),o=t(73555),r=t(58617),i=t(34232);function s(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code"},(0,l.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h1,{id:"桑基图",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#桑基图",children:"#"}),"桑基图"]}),"\n",(0,a.jsxs)(e.h2,{id:"自定义颜色",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#自定义颜色",children:"#"}),"自定义颜色"]}),"\n",(0,a.jsxs)(i.Z,{isMobile:"false",demoId:"_demos_config_Sankey_1",children:[(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"import type {\n  Datum,\n  ISankeyLabelSpec,\n  IVChart,\n  SankeyLinkElement,\n  SankeyNodeDatum,\n  SankeyNodeElement,\n  SankeyProps,\n} from '@sensoro-design/chart';\nimport { Sankey } from '@sensoro-design/chart';\nimport React from 'react';\nimport tree from 'tree-lodash';\n\n/**\n * 从数组获取随机数\n * @param arr\n */\nfunction getRandomElement<T = any>(arr: T[]) {\n  if (arr.length === 0) {\n    return null;\n  }\n  const randomIndex = Math.floor(Math.random() * arr.length);\n  return arr[randomIndex];\n}\n\nconst values = [\n  {\n    nodes: [\n      {\n        name: '今日巡航次数',\n        value: 160,\n        total: 1087875,\n        children: [\n          {\n            name: '公共安全',\n            value: 40,\n            total: 287875,\n            children: [\n              {\n                name: '紧急响应',\n                value: 10,\n                total: 18764,\n                children: [\n                  { name: '暴力行为', value: 10, total: 1864 },\n                  { name: '突发状况', value: 10, total: 1864 },\n                ],\n              },\n              {\n                name: '异常跟踪',\n                value: 10,\n                total: 22329,\n              },\n              { name: '持续监测', value: 10, total: 43093 },\n              { name: '巡航正常', value: 10, total: 763875 },\n            ],\n          },\n          {\n            name: '交通安全',\n            value: 40,\n            total: 200653,\n            children: [\n              {\n                name: '紧急响应',\n                value: 10,\n                total: 18764,\n                children: [\n                  { name: '暴力行为', value: 10, total: 1864 },\n                  { name: '突发状况', value: 10, total: 1864 },\n                ],\n              },\n              { name: '异常跟踪', value: 10, total: 22329 },\n              { name: '持续监测', value: 10, total: 43093 },\n              { name: '巡航正常', value: 10, total: 763875 },\n            ],\n          },\n          {\n            name: '市容市政',\n            value: 40,\n            total: 406765,\n            children: [\n              { name: '紧急响应', value: 10, total: 18764 },\n              { name: '异常跟踪', value: 10, total: 22329 },\n              { name: '持续监测', value: 10, total: 43093 },\n              { name: '巡航正常', value: 10, total: 763875 },\n            ],\n          },\n          {\n            name: '城市秩序',\n            value: 40,\n            total: 82854,\n            children: [\n              { name: '紧急响应', value: 10, total: 18764 },\n              { name: '异常跟踪', value: 10, total: 22329 },\n              { name: '持续监测', value: 10, total: 43093 },\n              { name: '巡航正常', value: 10, total: 763875 },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst colors = ['#423CD1', '#E7474D', '#E7AF2C', '#51C2E1', '#3AC583'];\nconst defaultSpecified = {\n  紧急响应: colors[1],\n  异常跟踪: colors[2],\n  持续监测: colors[3],\n  巡航正常: colors[4],\n};\nconst specified: Record<string, string> = {\n  ...defaultSpecified,\n};\n\ntree.foreach(values[0].nodes, (item) => {\n  const name = item.name as unknown as string;\n\n  if (!specified[name]) {\n    specified[name] = colors[0];\n  }\n});\n\nfunction Tooltip(props: { style?: React.CSSProperties }) {\n  const { style } = props;\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: '100px',\n        visibility: 'hidden',\n        backdropFilter: 'blur(20px)',\n        background: 'rgba(49,64,89,0.35)',\n        padding: 16,\n        top: 0,\n        left: 0,\n        ...style,\n      }}\n    >\n      我是 Tooltip\n    </div>\n  );\n}\n\nfunction Example() {\n  const autoHoverNames = React.useRef<string[]>([\n    '公共安全',\n    '交通安全',\n    '市容市政',\n    '城市秩序',\n  ]);\n  const chartRef = React.useRef<IVChart>(null);\n  const timeoutRef = React.useRef<NodeJS.Timeout>();\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\n  const [tooltipStyles, setTooltipStyles] = React.useState<React.CSSProperties>({});\n  const [isAutoHover, setIsAutoHover] = React.useState(false);\n\n  const nodeKey = React.useCallback(\n    (datum: SankeyNodeDatum) => {\n      return (datum as SankeyNodeDatum & { name: string }).name;\n    },\n    [],\n  );\n  const nodeHeight = React.useCallback(\n    (node: SankeyNodeElement) => {\n      if (node.depth === 0) {\n        return 160;\n      }\n\n      if (node.depth === 1 || node.depth === 2) {\n        return 40;\n      }\n\n      return 20;\n    },\n    [],\n  );\n  const linkHeight = React.useCallback(\n    (_: SankeyLinkElement, sourceNode: SankeyNodeElement) => {\n      if (sourceNode.depth === 0) {\n        return 40;\n      }\n\n      if (sourceNode.depth === 1) {\n        return 10;\n      }\n\n      return 20;\n    },\n    [],\n  );\n  const nodeStyleFill = React.useCallback(\n    (datum: Datum) => {\n      if (datum.depth !== 2) {\n        return colors[0];\n      }\n\n      return specified[datum.key];\n    },\n    [],\n  );\n  const linkStyleFill = React.useCallback(\n    (datum: Datum) => {\n      if (![2, 3].includes(datum.parents.length)) {\n        return colors[0];\n      }\n      const start = specified[datum?.source] || colors[0];\n      const end = specified[datum?.target] || colors[0];\n\n      return {\n        gradient: 'linear',\n        x0: 0.1,\n        y0: 1,\n        x1: 1,\n        y1: 1,\n        stops: [\n          {\n            offset: 0,\n            color: start,\n          },\n          {\n            offset: 1,\n            color: end,\n          },\n        ],\n      };\n    },\n    [],\n  ) as NonNullable<NonNullable<SankeyProps['link']>['style']>['fill'];\n  const labelFormatMethod = React.useCallback(\n    (_: string | string[], datum: Datum) => {\n      return `${datum?.name} ${datum?.total?.toLocaleString()}`;\n    },\n    [],\n  ) as ISankeyLabelSpec['formatMethod'];\n\n  const closeAutoHover = () => {\n    const chart = chartRef.current;\n\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    intervalRef.current && clearInterval(intervalRef.current);\n    if (chart) {\n      chart.setHovered(null);\n    }\n\n    setIsAutoHover(false);\n  };\n\n  const startAutoHover = () => {\n    const chart = chartRef.current;\n\n    if (!chart)\n      return;\n\n    const names = autoHoverNames.current;\n\n    closeAutoHover();\n    intervalRef.current = setInterval(() => {\n      const name = getRandomElement(names);\n\n      if (name) {\n        chart.setHovered([\n          {\n            name,\n          },\n        ]);\n      }\n    }, 2 * 1000);\n\n    setIsAutoHover(true);\n  };\n\n  const handlePointerEnter = () => {\n    closeAutoHover();\n  };\n\n  const handlePointerLeave = () => {\n    startAutoHover();\n  };\n\n  React.useEffect(\n    () => {\n      timeoutRef.current = setTimeout(() => {\n        // eslint-disable-next-line no-console\n        console.log(chartRef.current);\n\n        const chart = chartRef.current;\n\n        if (!chart)\n          return;\n\n        startAutoHover();\n\n        chart.on('pointerenter', { level: 'chart' }, handlePointerEnter);\n        chart.on('pointerleave', { level: 'chart' }, handlePointerLeave);\n\n        chart.setTooltipHandler({\n          showTooltip: (activeType, data, params) => {\n            // console.log(activeType, data, params);\n            setTooltipStyles((prev) => {\n              return {\n                ...prev,\n                left: params.event.x + 30,\n                top: params.event.y + 30,\n              };\n            });\n\n            if (params.changePositionOnly) {\n              return;\n            }\n\n            setTooltipStyles((prev) => {\n              return {\n                ...prev,\n                visibility: 'visible',\n              };\n            });\n\n            return 0;\n          },\n          hideTooltip: () => {\n            setTooltipStyles((prev) => {\n              return {\n                ...prev,\n                visibility: 'hidden',\n              };\n            });\n\n            return 0;\n          },\n          release: () => {},\n        });\n      }, 500);\n\n      return () => {\n        if (chartRef.current) {\n          chartRef.current.off('pointerenter', handlePointerEnter);\n          chartRef.current.off('pointerleave', handlePointerLeave);\n        }\n        timeoutRef.current && clearTimeout(timeoutRef.current);\n        closeAutoHover();\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  const handleClick: SankeyProps['onClick'] = (e) => {\n    if (e.node?.type === 'rect') {\n      const { datum } = e;\n\n      const chart = chartRef.current;\n\n      if (!chart)\n        return;\n\n      // 加载下层数据\n      if (!datum.children) {\n        // eslint-disable-next-line no-console\n        console.log(e);\n        tree.foreach(values[0].nodes, (item) => {\n          if (datum.datum.name === item.name) {\n            item.children = [\n              {\n                name: '测试节点',\n                value: 5,\n                total: 1000,\n              } as any,\n            ];\n          }\n        });\n\n        chart.updateData('sankey-data', values);\n      }\n    }\n  };\n\n  const handleDblClick: SankeyProps['onDblClick'] = (e) => {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  };\n\n  return (\n    <>\n      <Sankey\n        height={600}\n        data={[\n          {\n            id: 'sankey-data',\n            values,\n          },\n        ]}\n        color={{\n          type: 'ordinal',\n          range: colors,\n          domain: [],\n          specified,\n        }}\n        categoryField=\"name\"\n        valueField=\"value\"\n        nodeAlign=\"left\"\n        nodeWidth={4}\n        nodeKey={nodeKey}\n        nodeHeight={nodeHeight}\n        linkHeight={linkHeight}\n        node={{\n          style: {\n            // 扩大 node 点击热区\n            boundsPadding: [0, 20, 0, 20],\n            fill: nodeStyleFill,\n          },\n        }}\n        link={{\n          style: {\n            fillOpacity: 0.3,\n            fill: linkStyleFill,\n          },\n          state: {\n            selected: {\n              fillOpacity: 1,\n            },\n          },\n        }}\n        label={{\n          visible: true,\n          offset: -12,\n          formatMethod: labelFormatMethod,\n          style: {\n            fill: '#F6F9FE',\n            fontSize: 12,\n          },\n        }}\n        emphasis={{\n          enable: true,\n          trigger: 'hover',\n          effect: isAutoHover ? 'adjacency' : 'related',\n        }}\n        ref={chartRef}\n        onClick={handleClick}\n        onDblClick={handleDblClick}\n      />\n      <Tooltip style={tooltipStyles} />\n    </>\n  );\n};\n\nexport default Example;\n"})})}),(0,a.jsx)(o.default,{})]}),"\n",(0,a.jsxs)(e.h2,{id:"空数据",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#空数据",children:"#"}),"空数据"]}),"\n",(0,a.jsxs)(i.Z,{isMobile:"false",demoId:"_demos_config_Sankey_2",children:[(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-tsx",children:"import type { SankeyProps } from '@sensoro-design/chart';\nimport { Sankey } from '@sensoro-design/chart';\n\nconst values = [\n  {\n    nodes: [\n      {\n        name: '今日巡航次数',\n        value: 160,\n        total: 0,\n        children: [\n          {\n            name: '公共安全',\n            value: 40,\n            total: 0,\n            children: [\n              { name: '高风险', value: 10, total: 0 },\n              { name: '中风险', value: 10, total: 0 },\n              { name: '低风险', value: 10, total: 0 },\n              { name: '无风险', value: 10, total: 0 },\n            ],\n          },\n          {\n            name: '交通安全',\n            value: 40,\n            total: 0,\n            children: [\n              { name: '高风险', value: 10, total: 0 },\n              { name: '中风险', value: 10, total: 0 },\n              { name: '低风险', value: 10, total: 0 },\n              { name: '无风险', value: 10, total: 0 },\n            ],\n          },\n          {\n            name: '市容市政',\n            value: 40,\n            total: 0,\n            children: [\n              { name: '高风险', value: 10, total: 0 },\n              { name: '中风险', value: 10, total: 0 },\n              { name: '低风险', value: 10, total: 0 },\n              { name: '无风险', value: 10, total: 0 },\n            ],\n          },\n          {\n            name: '城市秩序',\n            value: 40,\n            total: 82854,\n            children: [\n              { name: '高风险', value: 10, total: 0 },\n              { name: '中风险', value: 10, total: 0 },\n              { name: '低风险', value: 10, total: 0 },\n              { name: '无风险', value: 10, total: 0 },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst colors = ['#423CD1', '#E7474D', '#E7AF2C', '#51C2E1', '#3AC583'];\nconst specified = {\n  今日巡航次数: colors[0],\n  公共安全: colors[0],\n  交通安全: colors[0],\n  市容市政: colors[0],\n  城市秩序: colors[0],\n  高风险: colors[1],\n  中风险: colors[2],\n  低风险: colors[3],\n  无风险: colors[4],\n};\n\nfunction Example() {\n  const spec: SankeyProps = {\n    height: 600,\n    data: [\n      {\n        values,\n      },\n    ],\n    color: {\n      type: 'ordinal',\n      range: colors,\n      domain: [],\n      specified,\n    },\n    categoryField: 'name',\n    valueField: 'value',\n    nodeAlign: 'left',\n    nodeWidth: 4,\n    // @ts-expect-error 忽略报错\n    nodeKey: datum => datum.name,\n    nodeHeight: (node) => {\n      return node.depth === 0 ? 160 : 40;\n    },\n    label: {\n      visible: true,\n      offset: 8,\n      formatMethod: (_, datum) => {\n        return `${datum?.name} ${datum?.total?.toLocaleString()}`;\n      },\n      style: {\n        fill: '#F6F9FE',\n        fontSize: 12,\n      },\n    },\n    tooltip: {\n      mark: {\n        visible: false,\n      },\n    },\n\n    link: {\n      style: {\n        fill: 'rgba(246, 249, 254, 0.15)',\n      },\n    },\n\n    emphasis: {\n      enable: true,\n      trigger: 'hover',\n      effect: 'related',\n    },\n  };\n\n  return (\n    <Sankey {...spec} />\n  );\n};\n\nexport default Example;\n"})})}),(0,a.jsx)(r.default,{})]})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(s,n)})):s(n)}let u=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["demos%2Fconfig%2FSankey.mdx"]={toc:[{id:"自定义颜色",text:"自定义颜色",depth:2},{id:"空数据",text:"空数据",depth:2}],title:"桑基图",headingTitle:"桑基图",frontmatter:{}}},58617:function(n,e,t){t.r(e),t.d(e,{default:()=>s});var a=t(52676),l=t(99313);let o=[{nodes:[{name:"今日巡航次数",value:160,total:0,children:[{name:"公共安全",value:40,total:0,children:[{name:"高风险",value:10,total:0},{name:"中风险",value:10,total:0},{name:"低风险",value:10,total:0},{name:"无风险",value:10,total:0}]},{name:"交通安全",value:40,total:0,children:[{name:"高风险",value:10,total:0},{name:"中风险",value:10,total:0},{name:"低风险",value:10,total:0},{name:"无风险",value:10,total:0}]},{name:"市容市政",value:40,total:0,children:[{name:"高风险",value:10,total:0},{name:"中风险",value:10,total:0},{name:"低风险",value:10,total:0},{name:"无风险",value:10,total:0}]},{name:"城市秩序",value:40,total:82854,children:[{name:"高风险",value:10,total:0},{name:"中风险",value:10,total:0},{name:"低风险",value:10,total:0},{name:"无风险",value:10,total:0}]}]}]}],r=["#423CD1","#E7474D","#E7AF2C","#51C2E1","#3AC583"],i={今日巡航次数:r[0],公共安全:r[0],交通安全:r[0],市容市政:r[0],城市秩序:r[0],高风险:r[1],中风险:r[2],低风险:r[3],无风险:r[4]},s=function(){return(0,a.jsx)(l.bQ,{height:600,data:[{values:o}],color:{type:"ordinal",range:r,domain:[],specified:i},categoryField:"name",valueField:"value",nodeAlign:"left",nodeWidth:4,nodeKey:n=>n.name,nodeHeight:n=>0===n.depth?160:40,label:{visible:!0,offset:8,formatMethod:(n,e)=>{var t;return`${null==e?void 0:e.name} ${null==e||null==(t=e.total)?void 0:t.toLocaleString()}`},style:{fill:"#F6F9FE",fontSize:12}},tooltip:{mark:{visible:!1}},link:{style:{fill:"rgba(246, 249, 254, 0.15)"}},emphasis:{enable:!0,trigger:"hover",effect:"related"}})}}}]);